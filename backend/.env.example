# ================================
# Reply Pass Backend Environment Variables
# ================================
# このファイルを .env にコピーして実際の値を設定してください
# 機密情報のため、このファイルは絶対にコミットしないでください

# --------------------------------
# 基本設定
# --------------------------------
# 実行環境 (development, staging, production)
ENVIRONMENT=development

# APIホストとポート
HOST=0.0.0.0
PORT=8000

# ログレベル (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=DEBUG

# --------------------------------
# Supabase 設定
# --------------------------------
# Supabaseプロジェクトの設定 > API > Project URL
SUPABASE_URL=https://your-project-ref.supabase.co

# Supabaseプロジェクトの設定 > API > Project API keys > service_role secret
SUPABASE_SERVICE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

# Supabaseプロジェクトの設定 > API > Project API keys > anon public (バックエンドでも使用)
SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

# Supabaseプロジェクトの設定 > API > JWT Settings > JWT Secret
# フロントエンドからのJWTトークン検証用
SUPABASE_JWT_SECRET=your-jwt-secret-key

# --------------------------------
# データベース設定
# --------------------------------
# Supabase PostgreSQL接続文字列
# Supabaseプロジェクトの設定 > Database > Connection string > URI
DATABASE_URL=postgresql://postgres:[YOUR-PASSWORD]@db.your-project-ref.supabase.co:5432/postgres

# 接続プール設定
DB_POOL_SIZE=10
DB_MAX_OVERFLOW=20

# --------------------------------
# AI/LLM 設定
# --------------------------------
# Google AI Studio > API keys で取得
GEMINI_API_KEY=AIzaSy...

# デフォルトモデル設定
DEFAULT_GEMINI_MODEL=gemini-2.0-flash
HIGH_QUALITY_GEMINI_MODEL=gemini-2.5-flash
OCR_GEMINI_MODEL=gemini-2.5-flash-lite

# --------------------------------
# 決済設定 (Stripe)
# --------------------------------
# Stripe Dashboard > Developers > API keys > Secret key
STRIPE_SECRET_KEY=sk_test_...

# Stripe Dashboard > Developers > Webhooks > Signing secret
STRIPE_WEBHOOK_SECRET=whsec_...

# Stripe価格ID（プラン設定）
STRIPE_PRICE_ID_PRO=price_...
STRIPE_PRICE_ID_UNLIMITED=price_...

# --------------------------------
# Redis 設定（キャッシュ・セッション管理）
# --------------------------------
# 開発環境: ローカルRedis
REDIS_URL=redis://localhost:6379/0

# 本番環境例: Redis Cloud
# REDIS_URL=redis://username:password@redis-host:port/db

# --------------------------------
# セキュリティ設定
# --------------------------------
# JWT署名用の秘密鍵（長いランダム文字列を生成）
JWT_SECRET_KEY=your-super-secret-jwt-key-change-this-in-production

# JWT有効期限（秒）
JWT_EXPIRATION_SECONDS=3600

# パスワードハッシュ用のソルト
PASSWORD_SALT_ROUNDS=12

# --------------------------------
# CORS設定
# --------------------------------
# 許可するオリジン（カンマ区切り）
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001,https://your-app.vercel.app

# --------------------------------
# レート制限設定
# --------------------------------
# Rate limiting backend (memory, redis)
RATE_LIMIT_BACKEND=memory

# 基本API制限（リクエスト/分）
BASIC_RATE_LIMIT_PER_MINUTE=60

# 生成API制限（リクエスト/分）
GENERATION_RATE_LIMIT_PER_MINUTE=5

# --------------------------------
# ファイルアップロード設定
# --------------------------------
# 最大ファイルサイズ（バイト）
MAX_FILE_SIZE=10485760  # 10MB

# 許可するファイル形式
ALLOWED_FILE_TYPES=image/jpeg,image/png,image/webp

# --------------------------------
# 外部サービス設定
# --------------------------------
# SendGrid（メール送信）
# SENDGRID_API_KEY=SG...

# Sentry（エラー監視）
# SENTRY_DSN=https://...

# --------------------------------
# 開発設定
# --------------------------------
# デバッグモード（開発時のみ true）
DEBUG_MODE=true

# SQLクエリログ出力（開発時のみ true）
SQL_ECHO=false

# APIドキュメント有効化（本番では false）
ENABLE_DOCS=true

# テストモード
TEST_MODE=false